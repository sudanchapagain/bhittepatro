name: Build APKs

on:
  push:
    tags:
      - "v*"

jobs:
  build-expo-android:
    name: Build Expo Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: reactnative/package-lock.json

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest eas-cli@latest

      - name: Install dependencies
        working-directory: ./reactnative
        run: npm ci

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create Expo local build
        working-directory: ./reactnative
        run: |
          # Configure for local build
          npx expo install --fix
          npx expo prebuild --platform android

      - name: Build Android APK
        working-directory: ./reactnative
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Upload Expo APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: expo-android-apk
          path: reactnative/android/app/build/outputs/apk/release/*.apk
          retention-days: 30

  build-kotlin-android:
    name: Build Kotlin Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate Gradle wrapper
        working-directory: ./kotlin
        run: gradle wrapper --gradle-version 8.10.2

      - name: Build Kotlin Android APK
        working-directory: ./kotlin
        run: ./gradlew assembleRelease --no-daemon

      - name: Upload Kotlin APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: kotlin-android-apk
          path: kotlin/app/build/outputs/apk/release/*.apk
          retention-days: 30

  create-release:
    name: Create GitHub Release
    needs: [build-expo-android, build-kotlin-android]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Expo APK
        uses: actions/download-artifact@v4
        with:
          name: expo-android-apk
          path: ./artifacts/expo/

      - name: Download Kotlin APK
        uses: actions/download-artifact@v4
        with:
          name: kotlin-android-apk
          path: ./artifacts/kotlin/

      - name: Rename APK files
        run: |
          # Get the tag name without 'refs/tags/' prefix
          TAG_NAME=${GITHUB_REF#refs/tags/}

          # Find and rename APK files with descriptive names
          find ./artifacts/expo/ -name "*.apk" -exec mv {} ./artifacts/bhittepatro-expo-${TAG_NAME}.apk \;
          find ./artifacts/kotlin/ -name "*.apk" -exec mv {} ./artifacts/bhittepatro-kotlin-${TAG_NAME}.apk \;

          # List files for verification
          ls -la ./artifacts/

      - name: Extract release notes from tag
        id: release_notes
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT

          # Create release notes (you can customize this)
          cat > release_notes.md << EOF
          # Release ${TAG_NAME}

          ## Downloads
          - bhittepatro-expo-${TAG_NAME}.apk: React Native version
          - bhittepatro-kotlin-${TAG_NAME}.apk: Kotlin version

          Built automatically from commit: ${{ github.sha }}
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_notes.outputs.tag_name }}
          name: Bhittepatro ${{ steps.release_notes.outputs.tag_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            ./artifacts/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: Cleanup Artifacts
    needs: [create-release]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            expo-android-apk
            kotlin-android-apk
